library(tidyverse)
library(tidyr)
library(lme4)
library(lmerTest)
adults <- c('MOT',
'FAT', 'DAD',
'INV', 'INT',
'GRA', 'GDM', 'GRM', 'MAM', 'NAN',
'GRN', 'GDF', 'GRF',
'DOC', 'OBS', 'HUS', 'MAN', 'MRS', 'NEI', 'OTH',
'UNC',
'AUN', 'AUT')
fra <- read_csv('C:/My/studies/UIT/FLA/code/FLA/result_french_personal.csv')
#  representation issues
fra %>% # sample size by age
filter(participant == 'CHI') %>%
select(age) %>%
mutate(age = floor(age)) %>%
group_by(age) %>%
summarize(n = n()) -> ages
ages %>% # plot a of sample size by age
ggplot(aes(age, n))+
geom_smooth(color = 'black')+
labs(x = 'age in months', y = 'sample size',
title = 'sample size by age for french')
ages %>% # plot a of sample size by age
ggplot(aes(age, n))+
geom_smooth(color = 'black')+
geom_line(color=red)+
labs(x = 'age in months', y = 'sample size',
title = 'sample size by age for french')
ages %>% # plot a of sample size by age
ggplot(aes(age, n))+
geom_smooth(color = 'black')+
geom_line(color = 'red')+
labs(x = 'age in months', y = 'sample size',
title = 'sample size by age for french')
load("C:/My/studies/UIT/FLA/code/FLA/mixed effects.RData")
View(fra)
View(fit_eng)
summary(fit_eng)
load("C:/My/studies/UIT/FLA/code/FLA/mixed effects.RData")
load("C:/My/studies/UIT/FLA/code/FLA/mixed effects.RData")
load("C:/My/studies/UIT/FLA/code/FLA/mixed effects.RData")
summary(fit_eng)
summary(fit_fra)
summary(lm(share ~ age + pronoun, data = chi_fra))
qqnorm(lm(share ~ age + pronoun, data = chi_fra)$residuals)
qqnorm(lm(share ~ age + pronoun, data = chi_eng)$residuals)
qqnorm(lm(share ~ age + pronoun, data = chi_eng)$residuals)
qqnorm(lm(share ~ age + pronoun, data = chi_fra)$residuals)
qqnorm(lm(share ~ age + pronoun, data = chi_eng)$residuals)
ages %>% # plot a of sample size by age
ggplot(aes(age, n))+
geom_smooth(color = 'black')+
geom_line(color = 'red')+
labs(x = 'age in months', y = 'sample size in files',
title = 'sample size by age for french')
ages %>% # plot a of sample size by age
ggplot(aes(age, n))+
geom_smooth(color = 'black')+
geom_line(color = 'red')+
labs(x = 'age in months', y = 'sample size in files',
title = 'sample size by age for French children')
ages %>% # plot a of sample size by age
ggplot(aes(age, n))+
geom_smooth(color = 'black', method = 'glm')+
geom_line(color = 'red')+
labs(x = 'age in months', y = 'sample size in files',
title = 'sample size by age for French children')
ages %>% # plot a of sample size by age
ggplot(aes(age, n))+
geom_smooth(color = 'black')+
geom_line(color = 'red')+
labs(x = 'age in months', y = 'sample size in files',
title = 'sample size by age for French children')
# #  representation issues
# eng %>% # sample size by age
#   filter(participant == 'CHI') %>%
#   select(age) %>%
#   mutate(age = round(age)) %>%
#   group_by(age) %>%
#   summarize(n = n()) -> ages
#
ages %>% # plot a of sample size by age
ggplot(aes(age, n))+
geom_line(color = 'red')+
geom_smooth(color = 'black')+
labs(x = 'age in months', y = 'sample size in files',
title = 'sample size by age for English children')
fra <- read_csv('C:/My/studies/UIT/FLA/code/FLA/result_french_personal.csv')
ages %>% # plot a of sample size by age
ggplot(aes(age, n))+
geom_smooth(color = 'black')+
geom_line(color = 'red')+
labs(x = 'age in months', y = 'sample size in files',
title = 'sample size by age for French children')
#  representation issues
fra %>% # sample size by age
filter(participant == 'CHI') %>%
select(age) %>%
summarize(n = n()) -> ages
ages %>% # plot a of sample size by age
ggplot(aes(age, n))+
geom_smooth(color = 'black')+
geom_line(color = 'red')+
labs(x = 'age in months', y = 'sample size in files',
title = 'sample size by age for French children')
#  representation issues
fra %>% # sample size by age
filter(participant == 'CHI') %>%
select(age) %>%
mutate(age = floor(age)) %>%
group_by(age) %>%
summarize(n = n()) -> ages
ages %>% # plot a of sample size by age
ggplot(aes(age, n))+
geom_smooth(color = 'black')+
geom_line(color = 'red')+
labs(x = 'age in months', y = 'sample size in files',
title = 'sample size by age for French children')
#  representation issues
fra %>% # sample size by age
filter(participant == 'CHI') %>%
select(age) %>%
#  mutate(age = floor(age)) %>%
group_by(age) %>%
summarize(n = n()) -> ages
ages %>% # plot a of sample size by age
ggplot(aes(age, n))+
geom_smooth(color = 'black')+
geom_line(color = 'red')+
labs(x = 'age in months', y = 'sample size in files',
title = 'sample size by age for French children')
#  representation issues
fra %>% # sample size by age
filter(participant == 'CHI') %>%
select(age) %>%
mutate(age = floor(age)) %>%
group_by(age) %>%
summarize(n = n()) -> ages
ages %>% # plot a of sample size by age
ggplot(aes(age, n))+
geom_smooth(color = 'black')+
geom_line(color = 'red')+
labs(x = 'age in months', y = 'sample size in files',
title = 'sample size by age for French children')
f = dlnorm()
hellp(dlnorm)
help(dlnorm)
integrate(dlnorm, 25, 100)
f <- dlnorm(x, 3, 0.5)
f <- function(x){dlnorm(x, 3, 0.5)}
integrate(f, 25, 100)
plot(f)
plot(log(f)
plot(log(f))
plot(log(f))
plot(dlnorm())
plot(dlnorm(500))
plot(dlnorm(seq(0,500)))
plot(dlnorm(seq(0,10)))
library(tidyverse)
help(plot)
plot(dlnorm(seq(0,100)))
plot(dlnorm(seq(0,100)), type='l')
plot(dlnorm(seq(0,100)), type='l')
plot(dlnorm(seq(0,100), 3, 0.5), type='l')
integrate(f, 25, 100)
View(pron_eng_merge)
View(pron_eng_merge)
pron_fra %>%
filter(participant == 'CHI') %>%
mutate(share = share*100) %>%
mutate(pronoun = ifelse(pronoun=='1sg'|pronoun=='1pl','1', pronoun)) %>%
filter(pronoun == '2' | pronoun == '1' | pronoun == '3') %>%
select(-path)-> comparison_fra
pron_eng %>%
filter(participant == 'CHI') %>%
mutate(share == share*100) %>%
mutate(pronoun = ifelse(pronoun=='1sg'|pronoun=='1pl','1', pronoun)) %>%
mutate(pronoun = ifelse(pronoun=='3sgF'|pronoun=='3sgN'|pronoun=='3sgM'|pronoun=='3pl','3', pronoun)) %>%
filter(pronoun == '2' | pronoun == '1' | pronoun == '3') %>%
select(-path) -> comparison_eng
pron %>%
group_by(pronoun) %>%
ggplot(aes(age, share, color = pronoun, linetype = language))+
geom_smooth(method = 'lm')+
labs(x = 'age in months', y = 'share of pronouns in words uttered',
title = 'comparison of english, french and german pronoun shares  by age, linear model')
pron %>%
group_by(pronoun) %>%
ggplot(aes(age, share, color = pronoun, linetype = languge))+
geom_smooth(method = 'lm')+
labs(x = 'age in months', y = 'share of pronouns in words uttered',
title = 'comparison of english, french and german pronoun shares  by age, linear model')
pron %>%
group_by(pronoun) %>%
mutate(language = languge) %>%
ggplot(aes(age, share, color = pronoun, linetype = language))+
geom_smooth(method = 'lm')+
labs(x = 'age in months', y = 'share of pronouns in words uttered',
title = 'comparison of english, french and german pronoun shares  by age, linear model')
pron <- rbind(pron_fra_merge, pron_eng_merge)
pron <- rbind(pron_fra_merge, pron_eng_merge)
pron %>%
group_by(pronoun) %>%
mutate(language = languge) %>%
ggplot(aes(age, share, color = pronoun, linetype = language))+
geom_smooth(method = 'lm')+
labs(x = 'age in months', y = 'share of pronouns in words uttered',
title = 'comparison of English and French pronoun shares  by age, linear model')
pron %>%
group_by(pronoun) %>%
mutate(language = languge) %>%
ggplot(aes(age, share, color = pronoun, linetype = language))+
geom_smooth()+
labs(x = 'age in months', y = 'share of pronouns in words uttered',
title = 'comparison of English and French pronoun shares  by age, linear model')
library(GGally)
ggpairs(pron_eng)
m1 <- summary(lm(share~age+pronoun+eng+ger, data = pron))
pron %>%
mutate(eng = ifelse(language == 'eng', 1, 0)) %>%
# mutate(ger = ifelse(language == 'ger', 1, 0)) %>%
select(-language) -> pron
pron %>%
group_by(pronoun) %>%
mutate(language = languge) %>%
ggplot(aes(age, share, color = pronoun, linetype = language))+
geom_smooth(method = 'lM')+
labs(x = 'age in months', y = 'share of pronouns in words uttered',
title = 'comparison of English and French pronoun shares  by age, linear model')
pron %>%
mutate(eng = ifelse(language == 'eng', 1, 0)) %>%
# mutate(ger = ifelse(language == 'ger', 1, 0)) %>%
select(-language) -> pron
m1 <- summary(lm(share~age+pronoun+eng+ger, data = pron))
m1 <- summary(lm(share~age+pronoun+eng, data = pron))
pron %>%
mutate(eng = ifelse(language == 'eng', 1, 0)) %>%
mutate(fra = ifelse(language == 'fra', 1, 0)) %>%
select(-language) -> pron
pron %>%
mutate(language = languge)
pron %>%
mutate(language = languge) %>%
mutate(eng = ifelse(language == 'eng', 1, 0)) %>%
mutate(fra = ifelse(language == 'fra', 1, 0)) %>%
select(-language) -> pron
m1 <- summary(lm(share~age+pronoun+eng+fra, data = pron))
m1
qqnorm(m1$residuals)
qqnorm(m1$residuals, title='lol kek')
qqnorm(m1$residuals, title('lol kek'))
title(qqnorm(m1$residuals), 'lol')
