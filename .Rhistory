help('DataCombine')
InsertRaw(Data = eng_rate, NewRaw = c('ana', '2', 22.0, 0.1))
InsertRow(Data = eng_rate, NewRow = c('ana', '2', 22.0, 0.1))
InsertRow(data = eng_rate, NewRow = c('ana', '2', 22.0, 0.1))
eng_rate
eng_rate <- InsertRow(data = eng_rate, NewRow = c('ana', '2', 22.0, 0.1))
eng_rate
eng_rate <- data.frame(childname=character(),
pronoun=character(),
rate=double(),
intercept=double(),
stringsAsFactors=FALSE)
eng_rate <- data.frame(childname= 'a',
pronoun='1',
rate=2.0,
intercept=22.0,
stringsAsFactors=FALSE)
eng_rate
eng_rate <- InsertRow(data = eng_rate, NewRow = c('ana', '2', 22.0, 0.1))
eng_rate
eng_rate <- data.frame(childname= 'name',
pronoun='pronoun',
rate=0,
intercept=0,
stringsAsFactors=FALSE)
eng_rate <- InsertRow(data = eng_rate, NewRow = c('ana', '2', 22.0, 0.1))
eng_rate
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) print(paste(name, pr, linear(name, pr))))
a = c(1, 2)
b = c('a', 'b')
c(a, b)
c(1, a, b)
rm(a)
rm(b)
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) InsertRow(eng_rate, c(name, pr, linear(name, pr))))
eng_rate
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- InsertRow(eng_rate, c(name, pr, linear(name, pr))))
eng_rate
linear(eng, 'Anne', '1sg')
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- InsertRow(eng_rate, c(name, pr, linear(eng, name, pr))))
eng_rate
linear(eng, 'Anne', '1sg')
eng_rate <- data.frame(childname= 'name',
pronoun='pronoun',
rate=0,
intercept=0,
stringsAsFactors=FALSE)
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) print(linear(eng, name, pr))))
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) print(linear(eng, name, pr)))
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) print(c(name, pr, linear(eng, name, pr))))
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) print(c(name, pr, c(linear(eng, name, pr)))))
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- rbind(eng_rate, c(name, pr, linear(eng, name, pr))))
View(eng_rate)
eng_rate <- data.frame(childname= 'name',
pronoun='pronoun',
intercept=0,
rate=0,
stringsAsFactors=FALSE)
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- rbind(eng_rate, c(name, pr, linear(eng, name, pr))))
View(eng_rate)
eng_rate <- data.frame(childname = character(),
pronoun = character(),
intercept = double(),
rate = double(),
stringsAsFactors=FALSE)
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- rbind(eng_rate, c(name, pr, linear(eng, name, pr))))
eng_rate <- data.frame(childname = character(),
pronoun = character(),
intercept = double(),
rate = double(),
stringsAsFactors=FALSE)
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- rbind(eng_rate, c(name, pr, linear(eng, name, pr))))
eng_rate <- data.frame(childname= 'name',
pronoun='pronoun',
intercept=0
rate=0,
stringsAsFactors=FALSE)
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- rbind(eng_rate, c(name, pr, linear(eng, name, pr))))
eng_rate <- data.frame(childname= 'name',
pronoun='pronoun',
intercept=0
rate=0,
stringsAsFactors=FALSE)
eng_rate <- data.frame(childname= 'name',
pronoun='pronoun',
intercept=0,
rate=0,
stringsAsFactors=FALSE)
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- rbind(eng_rate, c(name, pr, linear(eng, name, pr))))
eng_rate[-c(1), ]
head(eng_rate[-c(1), ])
eng_rate <- eng_rate[-c(1), ]
fra_rate <- data.frame(childname= 'name',
pronoun='pronoun',
intercept=0,
rate=0,
stringsAsFactors=FALSE)
for (name in unique(fra$childname)) (for (pr in unique(fra$pronoun)) eng_rate <- rbind(eng_rate, c(name, pr, linear(fra, name, pr))))
for (name in unique(fra$childname)) (for (pr in unique(fra$pronoun)) fra_rate <- rbind(fra_rate, c(name, pr, linear(fra, name, pr))))
fra_rate <- fra_rate[-c(1), ]
eng_rate <- data.frame(childname= 'name',
pronoun='pronoun',
intercept=0,
rate=0,
stringsAsFactors=FALSE)
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- rbind(eng_rate, c(name, pr, linear(eng, name, pr))))
eng_rate <- eng_rate[-c(1), ]
eng_rate %>%
filter(-10 < rate < 10)
eng_rate %>%
filter(abs(rate) < 10)
eng_rate %>%
filter(abs(as.numeric(rate)) < 10)
eng_rate %>%
filter(abs(as.numeric(rate)) < 10) %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept))
eng_rate %>%
filter(abs(as.numeric(rate)) < 10) %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)) -> eng_rate
fra_rate %>%
filter(abs(as.numeric(rate)) < 10) %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)) -> fra_rate
View(fra_rate)
eng_rate %>%
mutate(language = 'eng') -> eng_rate
fra_rate %>%
mutate(language = 'eng') -> fra_rate
fra_rate %>%
mutate(language = 'fra') -> fra_rate
View(fra_rate)
fra_eng_rate <- rbind(fra_rate, eng_rate)
View(fra_eng_rate)
help("t.test")
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun='3'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '3'))
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'))
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'), alternative='greater')
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1sg'), alternative='greater')
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1pl'), alternative='greater')
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1pl'))
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1pl'), 'less')
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1pl'), alternative = 'less')
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '1pl'), alternative = 'less')
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '1pl'))
t.test(rate ~ language, data = filter(fra_eng_rate))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '2'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '1sg'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '1pl'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '3sgF'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '3'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '3sgF'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '3'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '2'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '1sg'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '1pl'))
eng_fra %>%
ggplot(aes(age, share, color = pronoun, linetype = language))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'comparion of English and French pronouns, percent by age approximated by a linear model')
eng_fra %>%
ggplot(aes(age, share, color = pronoun, linetype = language))+
geom_smooth(method='loess')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'comparion of English and French pronouns, percent by age approximated by a linear model')
eng_fra %>%
ggplot(aes(age, share, color = pronoun, linetype = language))+
geom_smooth(method='loess')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'comparion of English and French pronouns, percent by age approximated by a smooth model')
eng_fra %>%
ggplot(aes(age, share, color = pronoun, linetype = language))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'comparion of English and French pronouns, percent by age approximated by a linear model')
# Welch Two Sample t-test
#
# data:  rate by language
# t = -0.18796, df = 59.446, p-value = 0.8516
# alternative hypothesis: true difference in means is not equal to 0
# 95 percent confidence interval:
#   -0.8211055  0.6800751
# sample estimates:
#   mean in group eng mean in group fra
# 0.7163428         0.7868580
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '3'), alternative = 'g')
# Welch Two Sample t-test
#
# data:  rate by language
# t = -0.18796, df = 59.446, p-value = 0.8516
# alternative hypothesis: true difference in means is not equal to 0
# 95 percent confidence interval:
#   -0.8211055  0.6800751
# sample estimates:
#   mean in group eng mean in group fra
# 0.7163428         0.7868580
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'), alternative = 'g')
/ 100
fra_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)/ 100) -> fra_rate
eng_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)/100) -> eng_rate
fra_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)/100) -> fra_rate
eng_rate %>%
mutate(language = 'eng') -> eng_rate
fra_rate %>%
mutate(language = 'fra') -> fra_rate
fra_eng_rate <- rbind(fra_rate, eng_rate)
t.test(rate ~ language, data = fra_eng_rate)
# Welch Two Sample t-test
#
# data:  rate by language
# t = 2.9501, df = 536.13, p-value = 0.003315
# alternative hypothesis: true difference in means is not equal to 0
# 95 percent confidence interval:
#   0.2122173 1.0580586
# sample estimates:
#   mean in group eng mean in group fra
# 1.1814695         0.5463316
t.test(intercept ~ language, data = fra_eng_rate)
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'), alternative = 'g')
eng_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)/100) -> eng_rate
eng_rate %>%
mutate(language = 'eng') -> eng_rate
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'), alternative = 'g')
fra_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)*100) -> fra_rate
fra_eng_rate <- rbind(fra_rate, eng_rate)
# Welch Two Sample t-test
#
# data:  rate by language
# t = 2.9501, df = 536.13, p-value = 0.003315
# alternative hypothesis: true difference in means is not equal to 0
# 95 percent confidence interval:
#   0.2122173 1.0580586
# sample estimates:
#   mean in group eng mean in group fra
# 1.1814695         0.5463316
t.test(intercept ~ language, data = fra_eng_rate)
eng_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)*100) -> eng_rate
eng_rate %>%
mutate(language = 'eng') -> eng_rate
fra_eng_rate <- rbind(fra_rate, eng_rate)
# Welch Two Sample t-test
#
# data:  rate by language
# t = 2.9501, df = 536.13, p-value = 0.003315
# alternative hypothesis: true difference in means is not equal to 0
# 95 percent confidence interval:
#   0.2122173 1.0580586
# sample estimates:
#   mean in group eng mean in group fra
# 1.1814695         0.5463316
t.test(intercept ~ language, data = fra_eng_rate)
eng %>%
gather('age', 'share', 3:14) %>%
mutate(share = share) %>%
mutate(age = as.numeric(age)) %>%
mutate(language = 'eng') %>%
na.omit() -> eng
eng %>%
gather('age', 'share', 3:14) %>%
mutate(age = as.numeric(age)) %>%
mutate(language = 'eng') %>%
na.omit() -> eng
eng <- read_csv('merged_eng.csv')
eng <- read_csv('merged_eng.csv')
eng %>%
gather('age', 'share', 3:14) %>%
mutate(age = as.numeric(age)) %>%
mutate(language = 'eng') %>%
na.omit() -> eng
eng %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='loess')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a smooth model')
eng %>%
gather('age', 'share', 3:14) %>%
mutate(age = as.numeric(age)*100) %>%
mutate(language = 'eng') %>%
na.omit() -> eng
eng %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='loess')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a smooth model')
eng <- read_csv('merged_eng.csv')
eng %>%
gather('age', 'share', 3:14) %>%
mutate(age = as.numeric(age)*100) %>%
mutate(language = 'eng') %>%
na.omit() -> eng
eng %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='loess')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a smooth model')
eng <- read_csv('merged_eng.csv')
eng %>%
gather('age', 'share', 3:14) %>%
mutate(share = share * 100) %>%
mutate(age = as.numeric(age)) %>%
mutate(language = 'eng') %>%
na.omit() -> eng
eng %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='loess')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a smooth model')
eng %>%
filter(childname == 'Anne') %>%
filter(pronoun == '1pl') -> an
lm(share~age, data=an)
eng %>%
filter(childname == 'Anne') %>%
filter(pronoun == '1pl') %>%
ggplot(aes(age, share))+
geom_smooth(method='loess')
eng %>%
filter(childname == 'Anne') %>%
filter(pronoun == '1pl') %>%
ggplot(aes(age, share))+
geom_smooth(method='lm')
lm(share~age, data=an)
View(eng_rate)
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- rbind(eng_rate, c(name, pr, linear(eng, name, pr))))
eng_rate <- data.frame(childname= 'name',
pronoun='pronoun',
intercept=0,
rate=0,
stringsAsFactors=FALSE)
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- rbind(eng_rate, c(name, pr, linear(eng, name, pr))))
eng_rate <- eng_rate[-c(1), ]
View(eng_rate)
#   filter(childname == 'Anne') %>%
#   filter(pronoun == '1pl') -> an
#
# eng %>%
#   filter(childname == 'Anne') %>%
#   filter(pronoun == '1pl') %>%
#   ggplot(aes(age, share))+
#   geom_smooth(method='lm')
#
# lm(share~age, data=an)
linear(eng, 'Anne', '1pl')
# eng %>%
#   filter(childname == 'Anne') %>%
#   filter(pronoun == '1pl') -> an
#
# eng %>%
#   filter(childname == 'Anne') %>%
#   filter(pronoun == '1pl') %>%
#   ggplot(aes(age, share))+
#   geom_smooth(method='lm')
#
lm(share~age, data=an)
linear(eng, 'Anne', '1pl')
linear <- function(lang, name, pr) {tryCatch({lm(age~share, filter(lang, pronoun == pr & childname == name))$coefficients}, error = function(err){return(c(NA, NA))})}
linear(eng, 'Anne', '1pl')
liner_bad <- function(lang, name, pr){lm(age~share, filter(lang, pronoun == pr & childname == name))$coefficients}
linear_bad(eng, 'Anne', '1pl')
linear_bad <- function(lang, name, pr){lm(age~share, filter(lang, pronoun == pr & childname == name))$coefficients}
linear_bad(eng, 'Anne', '1pl')
eng %>%
filter(pronoun == '1pl' & childname == 'Anne') -> an
lm(share~age, data=an)
linear(eng, 'Anne', '1pl')
linear_bad(eng, 'Anne', '1pl')
lm(share~age, data = filter(pronoun == '1pl' & childname == 'Anne'))
lm(share~age, data = filter(eng, pronoun == '1pl' & childname == 'Anne'))
linear_bad(eng, 'Anne', '1pl')
linear <- function(lang, name, pr) {tryCatch({lm(share~age, filter(lang, pronoun == pr & childname == name))$coefficients}, error = function(err){return(c(NA, NA))})}
eng_rate <- data.frame(childname= 'name',
pronoun='pronoun',
intercept=0,
rate=0,
stringsAsFactors=FALSE)
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- rbind(eng_rate, c(name, pr, linear(eng, name, pr))))
eng_rate <- eng_rate[-c(1), ]
eng_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)) -> eng_rate
eng_rate %>%
mutate(language = 'eng') -> eng_rate
View(eng_rate)
help('lm')
eng_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept) + rate*24) -> eng_rate
View(eng)
fra_rate <- data.frame(childname= 'name',
pronoun='pronoun',
intercept=0,
rate=0,
stringsAsFactors=FALSE)
for (name in unique(fra$childname)) (for (pr in unique(fra$pronoun)) fra_rate <- rbind(fra_rate, c(name, pr, linear(fra, name, pr))))
fra_rate <- fra_rate[-c(1), ]
fra_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept) + rate*24) -> fra_rate
fra_rate %>%
mutate(language = 'fra') -> fra_rate
fra_eng_rate <- rbind(fra_rate, eng_rate)
t.test(rate ~ language, data = fra_eng_rate)
t.test(intercept ~ language, data = fra_eng_rate)
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'))
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'), 'g')
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'), alternative='g')
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '3'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '2'))
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '2'))
eng_fra %>%
ggplot(aes(age, share, color = pronoun, linetype = language))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'comparion of English and French pronouns, percent by age approximated by a linear model')
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '2'), alternative='l')
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1pl'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '1pl'))
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1sg'))
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1sg'))
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1sg'), alternative = 'g')
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '1sg'))
eng %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='loess')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a smooth model')
eng %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a linear model')
eng %>%
filter(pronoun != '3' & pronoun != '2' ) %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a linear model')
fra %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='loess')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'French pronouns, percent by age approximated by a smooth model')
fra %>%
ggplot(aes(age, share, color = pronoun))+
geom_line()+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'French pronouns, percent by age approximated by a smooth model')
fra %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'French pronouns, percent by age approximated by a smooth model')
fra %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'French pronouns, percent by age approximated by a linear model')
fra %>%
filter(pronoun != '3' & pronoun != '2' ) %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'French pronouns, percent by age approximated by a linear model')
eng %>%
filter(pronoun != '3' & pronoun != '2' ) %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a linear model')
fra %>%
filter(pronoun != '3' & pronoun != '2' ) %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'French pronouns, percent by age approximated by a linear model')
t.test(rate ~ pronoun, data = filter(fra_rate, pronoun == '1pl' | pronoun == 'on'))
t.test(intercept ~ pronoun, data = filter(fra_rate, pronoun == '1pl' | pronoun == 'on'))
t.test(intercept ~ pronoun, data = mutate(fra_rate, pronoun = ifelse(pronoun == 'y'|pronoun=='on'|pronoun == '1sg'|pronoun == '2sg'|pronoun == '3sg','sg', 'pl' ))
t.test(intercept ~ pronoun, data = mutate(fra_rate, pronoun = ifelse(pronoun == 'y'|pronoun=='on'|pronoun == '1sg'|pronoun == '2sg'|pronoun == '3sg','sg', 'pl' )))
fra_rate %>%
mutate(pronoun = ifelse(pronoun == 'y'|pronoun=='on'|pronoun == '1sg'|pronoun == '2sg'|pronoun == '3sg','sg', 'pl' )) %>%
fra_rate %>%
mutate(pronoun = ifelse(pronoun == 'y'|pronoun=='on'|pronoun == '1sg'|pronoun == '2sg'|pronoun == '3sg','sg', 'pl' ))
fra_rate %>%
mutate(pronoun = ifelse(pronoun == 'y'|pronoun=='on'|pronoun == '1sg'|pronoun == '2sg'|pronoun == '3sg','sg', 'pl' ))
fra_rate %>%
mutate(pronoun = ifelse(pronoun == 'y'|pronoun=='on'|pronoun == '1sg'|pronoun == '2sg'|pronoun == '3sg','sg', 'pl' )) %>%
t.test(formula=intercept ~ pronoun)
fra_rate %>%
mutate(pronoun = ifelse(pronoun == 'y'|pronoun=='on'|pronoun == '1sg'|pronoun == '2sg'|pronoun == '3sg','sg', 'pl' )) -> fra_rate_num
t.test(formula=intercept ~ pronoun, data = fra_rate_num)
t.test(rate ~ pronoun, data = fra_rate_num)
###eng
eng_rate %>%
mutate(pronoun = ifelse(pronoun == '1sg'|pronoun == '2sg'|pronoun=='3sgF'|pronoun=='3sgN'|pronoun == '3sgM','sg', 'pl')) -> eng_rate_num
t.test(rate ~ pronoun, data = eng_rate_num)
