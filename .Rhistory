title = 'comparion of English and French pronouns, percent by age approximated by a smooth model')
eng_fra %>%
ggplot(aes(age, share, color = pronoun, linetype = language))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'comparion of English and French pronouns, percent by age approximated by a linear model')
# Welch Two Sample t-test
#
# data:  rate by language
# t = -0.18796, df = 59.446, p-value = 0.8516
# alternative hypothesis: true difference in means is not equal to 0
# 95 percent confidence interval:
#   -0.8211055  0.6800751
# sample estimates:
#   mean in group eng mean in group fra
# 0.7163428         0.7868580
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '3'), alternative = 'g')
# Welch Two Sample t-test
#
# data:  rate by language
# t = -0.18796, df = 59.446, p-value = 0.8516
# alternative hypothesis: true difference in means is not equal to 0
# 95 percent confidence interval:
#   -0.8211055  0.6800751
# sample estimates:
#   mean in group eng mean in group fra
# 0.7163428         0.7868580
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'), alternative = 'g')
/ 100
fra_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)/ 100) -> fra_rate
eng_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)/100) -> eng_rate
fra_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)/100) -> fra_rate
eng_rate %>%
mutate(language = 'eng') -> eng_rate
fra_rate %>%
mutate(language = 'fra') -> fra_rate
fra_eng_rate <- rbind(fra_rate, eng_rate)
t.test(rate ~ language, data = fra_eng_rate)
# Welch Two Sample t-test
#
# data:  rate by language
# t = 2.9501, df = 536.13, p-value = 0.003315
# alternative hypothesis: true difference in means is not equal to 0
# 95 percent confidence interval:
#   0.2122173 1.0580586
# sample estimates:
#   mean in group eng mean in group fra
# 1.1814695         0.5463316
t.test(intercept ~ language, data = fra_eng_rate)
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'), alternative = 'g')
eng_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)/100) -> eng_rate
eng_rate %>%
mutate(language = 'eng') -> eng_rate
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'), alternative = 'g')
fra_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)*100) -> fra_rate
fra_eng_rate <- rbind(fra_rate, eng_rate)
# Welch Two Sample t-test
#
# data:  rate by language
# t = 2.9501, df = 536.13, p-value = 0.003315
# alternative hypothesis: true difference in means is not equal to 0
# 95 percent confidence interval:
#   0.2122173 1.0580586
# sample estimates:
#   mean in group eng mean in group fra
# 1.1814695         0.5463316
t.test(intercept ~ language, data = fra_eng_rate)
eng_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)*100) -> eng_rate
eng_rate %>%
mutate(language = 'eng') -> eng_rate
fra_eng_rate <- rbind(fra_rate, eng_rate)
# Welch Two Sample t-test
#
# data:  rate by language
# t = 2.9501, df = 536.13, p-value = 0.003315
# alternative hypothesis: true difference in means is not equal to 0
# 95 percent confidence interval:
#   0.2122173 1.0580586
# sample estimates:
#   mean in group eng mean in group fra
# 1.1814695         0.5463316
t.test(intercept ~ language, data = fra_eng_rate)
eng %>%
gather('age', 'share', 3:14) %>%
mutate(share = share) %>%
mutate(age = as.numeric(age)) %>%
mutate(language = 'eng') %>%
na.omit() -> eng
eng %>%
gather('age', 'share', 3:14) %>%
mutate(age = as.numeric(age)) %>%
mutate(language = 'eng') %>%
na.omit() -> eng
eng <- read_csv('merged_eng.csv')
eng <- read_csv('merged_eng.csv')
eng %>%
gather('age', 'share', 3:14) %>%
mutate(age = as.numeric(age)) %>%
mutate(language = 'eng') %>%
na.omit() -> eng
eng %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='loess')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a smooth model')
eng %>%
gather('age', 'share', 3:14) %>%
mutate(age = as.numeric(age)*100) %>%
mutate(language = 'eng') %>%
na.omit() -> eng
eng %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='loess')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a smooth model')
eng <- read_csv('merged_eng.csv')
eng %>%
gather('age', 'share', 3:14) %>%
mutate(age = as.numeric(age)*100) %>%
mutate(language = 'eng') %>%
na.omit() -> eng
eng %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='loess')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a smooth model')
eng <- read_csv('merged_eng.csv')
eng %>%
gather('age', 'share', 3:14) %>%
mutate(share = share * 100) %>%
mutate(age = as.numeric(age)) %>%
mutate(language = 'eng') %>%
na.omit() -> eng
eng %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='loess')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a smooth model')
eng %>%
filter(childname == 'Anne') %>%
filter(pronoun == '1pl') -> an
lm(share~age, data=an)
eng %>%
filter(childname == 'Anne') %>%
filter(pronoun == '1pl') %>%
ggplot(aes(age, share))+
geom_smooth(method='loess')
eng %>%
filter(childname == 'Anne') %>%
filter(pronoun == '1pl') %>%
ggplot(aes(age, share))+
geom_smooth(method='lm')
lm(share~age, data=an)
View(eng_rate)
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- rbind(eng_rate, c(name, pr, linear(eng, name, pr))))
eng_rate <- data.frame(childname= 'name',
pronoun='pronoun',
intercept=0,
rate=0,
stringsAsFactors=FALSE)
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- rbind(eng_rate, c(name, pr, linear(eng, name, pr))))
eng_rate <- eng_rate[-c(1), ]
View(eng_rate)
#   filter(childname == 'Anne') %>%
#   filter(pronoun == '1pl') -> an
#
# eng %>%
#   filter(childname == 'Anne') %>%
#   filter(pronoun == '1pl') %>%
#   ggplot(aes(age, share))+
#   geom_smooth(method='lm')
#
# lm(share~age, data=an)
linear(eng, 'Anne', '1pl')
# eng %>%
#   filter(childname == 'Anne') %>%
#   filter(pronoun == '1pl') -> an
#
# eng %>%
#   filter(childname == 'Anne') %>%
#   filter(pronoun == '1pl') %>%
#   ggplot(aes(age, share))+
#   geom_smooth(method='lm')
#
lm(share~age, data=an)
linear(eng, 'Anne', '1pl')
linear <- function(lang, name, pr) {tryCatch({lm(age~share, filter(lang, pronoun == pr & childname == name))$coefficients}, error = function(err){return(c(NA, NA))})}
linear(eng, 'Anne', '1pl')
liner_bad <- function(lang, name, pr){lm(age~share, filter(lang, pronoun == pr & childname == name))$coefficients}
linear_bad(eng, 'Anne', '1pl')
linear_bad <- function(lang, name, pr){lm(age~share, filter(lang, pronoun == pr & childname == name))$coefficients}
linear_bad(eng, 'Anne', '1pl')
eng %>%
filter(pronoun == '1pl' & childname == 'Anne') -> an
lm(share~age, data=an)
linear(eng, 'Anne', '1pl')
linear_bad(eng, 'Anne', '1pl')
lm(share~age, data = filter(pronoun == '1pl' & childname == 'Anne'))
lm(share~age, data = filter(eng, pronoun == '1pl' & childname == 'Anne'))
linear_bad(eng, 'Anne', '1pl')
linear <- function(lang, name, pr) {tryCatch({lm(share~age, filter(lang, pronoun == pr & childname == name))$coefficients}, error = function(err){return(c(NA, NA))})}
eng_rate <- data.frame(childname= 'name',
pronoun='pronoun',
intercept=0,
rate=0,
stringsAsFactors=FALSE)
for (name in unique(eng$childname)) (for (pr in unique(eng$pronoun)) eng_rate <- rbind(eng_rate, c(name, pr, linear(eng, name, pr))))
eng_rate <- eng_rate[-c(1), ]
eng_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept)) -> eng_rate
eng_rate %>%
mutate(language = 'eng') -> eng_rate
View(eng_rate)
help('lm')
eng_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept) + rate*24) -> eng_rate
View(eng)
fra_rate <- data.frame(childname= 'name',
pronoun='pronoun',
intercept=0,
rate=0,
stringsAsFactors=FALSE)
for (name in unique(fra$childname)) (for (pr in unique(fra$pronoun)) fra_rate <- rbind(fra_rate, c(name, pr, linear(fra, name, pr))))
fra_rate <- fra_rate[-c(1), ]
fra_rate %>%
mutate(rate = as.numeric(rate)) %>%
mutate(intercept = as.numeric(intercept) + rate*24) -> fra_rate
fra_rate %>%
mutate(language = 'fra') -> fra_rate
fra_eng_rate <- rbind(fra_rate, eng_rate)
t.test(rate ~ language, data = fra_eng_rate)
t.test(intercept ~ language, data = fra_eng_rate)
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'))
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'), 'g')
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'), alternative='g')
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '3'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '2'))
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '2'))
eng_fra %>%
ggplot(aes(age, share, color = pronoun, linetype = language))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'comparion of English and French pronouns, percent by age approximated by a linear model')
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '2'), alternative='l')
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1pl'))
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '1pl'))
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1sg'))
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1sg'))
t.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1sg'), alternative = 'g')
t.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '1sg'))
eng %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='loess')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a smooth model')
eng %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a linear model')
eng %>%
filter(pronoun != '3' & pronoun != '2' ) %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a linear model')
fra %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='loess')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'French pronouns, percent by age approximated by a smooth model')
fra %>%
ggplot(aes(age, share, color = pronoun))+
geom_line()+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'French pronouns, percent by age approximated by a smooth model')
fra %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'French pronouns, percent by age approximated by a smooth model')
fra %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'French pronouns, percent by age approximated by a linear model')
fra %>%
filter(pronoun != '3' & pronoun != '2' ) %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'French pronouns, percent by age approximated by a linear model')
eng %>%
filter(pronoun != '3' & pronoun != '2' ) %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'English pronouns, percent by age approximated by a linear model')
fra %>%
filter(pronoun != '3' & pronoun != '2' ) %>%
ggplot(aes(age, share, color = pronoun))+
geom_smooth(method='lm')+
labs(x = 'age in months', y = 'percent of pronouns in words uttered',
title = 'French pronouns, percent by age approximated by a linear model')
t.test(rate ~ pronoun, data = filter(fra_rate, pronoun == '1pl' | pronoun == 'on'))
t.test(intercept ~ pronoun, data = filter(fra_rate, pronoun == '1pl' | pronoun == 'on'))
t.test(intercept ~ pronoun, data = mutate(fra_rate, pronoun = ifelse(pronoun == 'y'|pronoun=='on'|pronoun == '1sg'|pronoun == '2sg'|pronoun == '3sg','sg', 'pl' ))
t.test(intercept ~ pronoun, data = mutate(fra_rate, pronoun = ifelse(pronoun == 'y'|pronoun=='on'|pronoun == '1sg'|pronoun == '2sg'|pronoun == '3sg','sg', 'pl' )))
fra_rate %>%
mutate(pronoun = ifelse(pronoun == 'y'|pronoun=='on'|pronoun == '1sg'|pronoun == '2sg'|pronoun == '3sg','sg', 'pl' )) %>%
fra_rate %>%
mutate(pronoun = ifelse(pronoun == 'y'|pronoun=='on'|pronoun == '1sg'|pronoun == '2sg'|pronoun == '3sg','sg', 'pl' ))
fra_rate %>%
mutate(pronoun = ifelse(pronoun == 'y'|pronoun=='on'|pronoun == '1sg'|pronoun == '2sg'|pronoun == '3sg','sg', 'pl' ))
fra_rate %>%
mutate(pronoun = ifelse(pronoun == 'y'|pronoun=='on'|pronoun == '1sg'|pronoun == '2sg'|pronoun == '3sg','sg', 'pl' )) %>%
t.test(formula=intercept ~ pronoun)
fra_rate %>%
mutate(pronoun = ifelse(pronoun == 'y'|pronoun=='on'|pronoun == '1sg'|pronoun == '2sg'|pronoun == '3sg','sg', 'pl' )) -> fra_rate_num
t.test(formula=intercept ~ pronoun, data = fra_rate_num)
t.test(rate ~ pronoun, data = fra_rate_num)
###eng
eng_rate %>%
mutate(pronoun = ifelse(pronoun == '1sg'|pronoun == '2sg'|pronoun=='3sgF'|pronoun=='3sgN'|pronoun == '3sgM','sg', 'pl')) -> eng_rate_num
t.test(rate ~ pronoun, data = eng_rate_num)
library(lmer4)
library(tidyverse)
library(lmer)
library(lme4)
m_eng_mixed <- summary(lmer(share~age+pronoun+(1|childname), data = eng))
m_eng_mixed
# Correlation of Fixed Effects:
#   (Intr) age    prnn1s pronn2 pronn3 prnn3p prnn3F prnn3M
# age         -0.874
# pronoun1sg  -0.268  0.039
# pronoun2    -0.277  0.049  0.597
# pronoun3    -0.282  0.051  0.602  0.606
# pronoun3pl  -0.249  0.030  0.573  0.576  0.580
# pronoun3sgF -0.206  0.005  0.522  0.523  0.527  0.506
# pronoun3sgM -0.250  0.034  0.569  0.572  0.575  0.552  0.502
# pronoun3sgN -0.281  0.051  0.601  0.604  0.609  0.578  0.526  0.574
qqnorm(m_eng_mixed$residuals)
m_eng_mixed <- lmer(share~age+pronoun+(1|childname), data = eng)
View(m_eng_mixed)
summary(m_eng_mixed)
summary(m_eng_mixed)
m_eng_mixed <- summary(lmer(share~age+pronoun+(1|childname), data = eng))
anova(m_eng_mixed)
m_eng_mixed <- lmer(share~age+pronoun+(1|childname), data = eng)
anova(m_eng_mixed)
summary(anova(m_eng_mixed))
anova(m_eng_mixed)
install.packages('lmerTest')
m_eng_mixed <- lmer(share~age+pronoun+(1|childname), data = eng)
summary(m_eng_mixed)
anova(m_eng_mixed)
aov(m_eng_mixed)
library(lme4)
m_eng_mixed <- lmer(share~age+pronoun+(1|childname), data = eng)
summary(m_eng_mixed)
m_fra_mixed <- summary(lmer(share~age+pronoun+(1|childname), data = fra))
m_fra_mixed <- lmer(share~age+pronoun+(1|childname), data = fra)
summary(m_fra_mixed)
library(lmerTest)
m_eng_mixed <- lmer(share~age+pronoun+(1|childname), data = eng)
summary(m_eng_mixed)
# Correlation of Fixed Effects:
# (Intr) age    prnn1s pronn2 pronn3 prnn3p prnn3F prnn3M
# age         -0.874
# pronoun1sg  -0.268  0.039
# pronoun2    -0.277  0.049  0.597
# pronoun3    -0.282  0.051  0.602  0.606
# pronoun3pl  -0.249  0.030  0.573  0.576  0.580
# pronoun3sgF -0.206  0.005  0.522  0.523  0.527  0.506
# pronoun3sgM -0.250  0.034  0.569  0.572  0.575  0.552  0.502
# pronoun3sgN -0.281  0.051  0.601  0.604  0.609  0.578  0.526  0.574
qqnorm(m_eng_mixed$residuals)
# Correlation of Fixed Effects:
# (Intr) age    prnn1s pronn2 pronn3 prnn3p prnn3F prnn3M
# age         -0.874
# pronoun1sg  -0.268  0.039
# pronoun2    -0.277  0.049  0.597
# pronoun3    -0.282  0.051  0.602  0.606
# pronoun3pl  -0.249  0.030  0.573  0.576  0.580
# pronoun3sgF -0.206  0.005  0.522  0.523  0.527  0.506
# pronoun3sgM -0.250  0.034  0.569  0.572  0.575  0.552  0.502
# pronoun3sgN -0.281  0.051  0.601  0.604  0.609  0.578  0.526  0.574
qqnorm(summary(m_eng_mixed)$residuals)
m_fra_mixed <- lmer(share~age+pronoun+(1|childname), data = fra)
summary(m_fra_mixed)
# age        -0.808
# pronoun1sg -0.513  0.033
# pronoun2   -0.545  0.055  0.866
# pronoun2pl -0.315 -0.005  0.559  0.569
# pronoun2sg -0.545  0.055  0.866  0.889  0.569
# pronoun3   -0.535  0.045  0.864  0.885  0.568  0.885
# pronoun3pl -0.520  0.037  0.854  0.873  0.563  0.873  0.871
# pronoun3sg -0.533  0.043  0.863  0.884  0.567  0.884  0.881  0.870
# pronounon  -0.470  0.006  0.812  0.827  0.537  0.827  0.825  0.816  0.824
# pronouny   -0.497  0.020  0.835  0.852  0.550  0.852  0.850  0.840  0.849  0.801
qqnorm(summary(m_fra_mixed)$residuals)
m1 <- summary(lmer(share~age+pronoun+eng+(1|childname), data = eng_fra_for_modeling))
m1
m1
m1 <- summary(lmer(share~age+pronoun+eng+(1|childname), data = eng_fra_for_modeling))
eng_fra %>%
mutate(eng = ifelse(language == 'eng', 1, 0)) %>%
mutate(fra = ifelse(language == 'fra', 1, 0)) %>%
select(-language) -> eng_fra_for_modeling
m1 <- summary(lmer(share~age+pronoun+eng+(1|childname), data = eng_fra_for_modeling))
m1
qqnorm(m1$residuals)
qqnorm(m1$residuals)
qqnorm(m1$residuals)
plot(eng_rate)
hist(eng_rate$rate)
help("hist")
hist(eng_rate$rate, nclass = nclass.Sturges(eng_rate$rate))
hist(eng_rate$rate, nclass = nclass.scott(eng_rate$rate))
hist(eng_rate$rate, nclass = nclass.scott(eng_rate$rate))
hist(eng_rate$rate, nclass = nclass.FD(eng_rate$rate))
hist(eng_rate$rate, nclass = 25)
hist(fra_rate$rate, nclass = 25)
shapiro.test(fra_rate$rate)
summary(shapiro.test(fra_rate$rate))
shapiro.test(fra_rate$rate)
hist(fra_rate$rate, nclass = 20)
hist(fra_rate$rate, nclass = 10)
hist(fra_rate$rate)
hist(eng_rate$rate)
shapiro.test(eng_rate$rate)
wilcox.test(rate ~ language, data = fra_eng_rate)
shapiro.test(fra_eng_rate$rate)
qqnorm((fra_rate$rate)
qqnorm(fra_rate$rate)
qqnorm(fra_rate$rate)
qqnorm(fra_eng_rate$rate)
qqnorm(eng_rate$rate)
qqnorm(eng_rate$intercept)
shapiro.test(eng_rate$intercept)
shapiro.test(rnorm(c(1:100)))
qqnorm(fra_rate$intercept)
shapiro.test(fra_rate$intercept)
qqnorm(fra_eng_rate$intercept)
shapiro.test(fra_eng_rate$intercept)
# Shapiro-Wilk normality test
#
# data:  fra_eng_rate$intercept
# W = 0.70424, p-value < 2.2e-16
wilcox.test(intercept ~ language, data = fra_eng_rate)
wilcox.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '3'), alternative='g')
wilcox.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '3'))
wilcox.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '2'), alternative='l')
wilcox.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '2'))
wilcox.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1pl'))
wilcox.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '1pl'))
wilcox.test(intercept ~ language, data = filter(fra_eng_rate, pronoun == '1sg'), alternative = 'g')
wilcox.test(rate ~ language, data = filter(fra_eng_rate, pronoun == '1sg'))
### fra on
wilcox.test(intercept ~ pronoun, data = filter(fra_rate, pronoun == '1pl' | pronoun == 'on'))
wilcox.test(rate ~ pronoun, data = fra_rate_num)
wilcox.test(rate ~ pronoun, data = eng_rate_num)
shapiro.test(m1$residuals)
shapiro.test(summary(m_fra_mixed)$residuals)
shapiro.test(summary(m_eng_mixed)$residuals)
library(lmerTest)
library(tidyverse)
fit_eng <- lmer(share ~ age*pronoun + (1|childname), data = chi_eng)
summary(fit_eng)
# ---
# Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# Correlation of Fixed Effects:
# (Intr) age    pronn2 pronn3 ag:pr2
# age         -0.973
# pronoun2    -0.553  0.561
# pronoun3    -0.782  0.793  0.471
# age:pronon2  0.550 -0.564 -0.993 -0.468
# age:pronon3  0.777 -0.798 -0.468 -0.993  0.471
qqnorm(summary(fit_eng)$residuals)
shapiro.test(summary(fit_eng)$residuals)
shapiro.test(summary(fit_eng)$residuals)
fit_fra <- lmer(share ~ age*pronoun + (1|childname), data = chi_fra)
summary(fit_fra)
# age        -0.827
# pronoun1sg -0.262  0.000
# pronoun2   -0.262  0.000  0.500
# pronoun2pl -0.262  0.000  0.500  0.500
# pronoun2sg -0.262  0.000  0.500  0.500  0.500
# pronoun3   -0.262  0.000  0.500  0.500  0.500  0.500
# pronoun3pl -0.262  0.000  0.500  0.500  0.500  0.500  0.500
# pronoun3sg -0.262  0.000  0.500  0.500  0.500  0.500  0.500  0.500
# pronounon  -0.262  0.000  0.500  0.500  0.500  0.500  0.500  0.500  0.500
# pronouny   -0.262  0.000  0.500  0.500  0.500  0.500  0.500  0.500  0.500  0.500
qqnorm(summary(fit_fra)$residuals)
shapiro.test(summary(fit_fra)$residuals)
shapiro.test(lm(share ~ age * pronoun, data = chi_fra)$residuals)
